<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:util="http://www.springframework.org/schema/util"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/util
http://www.springframework.org/schema/util/spring-util-3.2.xsd">

<!-- Problem 
As a result of the preceding bean declaration, you can see that the two customers get the same shopping cart
instance.  -->

<!-- Reason
This is because Springâ€™s default bean scope is singleton, which means Spring creates exactly one shopping cart
instance per IoC container.
 
 

<bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<constructor-arg value="tv" />
<constructor-arg value="5.5" />
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<constructor-arg value="CD-RW" />
<constructor-arg value="1.5" />
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean>
 
<bean id="shoppingCart" class="com.bridgelabz.spring_constructor.ShoppingCart" />
-->

<!-- Solution
In your shop application, you expect each customer to get a different shopping cart instance when the getBean()
method is called. To ensure this behavior, the scope of the shoppingCart bean needs to be set to prototype. Then
Spring creates a new bean instance for each getBean() method call.
 -->


<!-- <bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<constructor-arg value="tv" />
<constructor-arg value="5.5" />
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<constructor-arg value="CD-RW" />
<constructor-arg value="1.5" />
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean>

<bean id="shoppingCart" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

 -->
 
 
 <!-- Use Properties File data to Setup POJO Instantiation Values  
  <bean id="discountPropertyConfigurer"
class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
<property name="location" value="classpath:discounts.properties"></property>
<property name="ignoreResourceNotFound" value="true"/>
<property name="ignoreUnresolvablePlaceholders" value="true"/>
</bean>

<bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<property name="name" value="tv" />
<property name="price" value="7.5" />
<property name="discount" value="${specialcustomer.discount:0}" /> 
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="CD-RW" />
<property name="price" value="1.5" />
<property name="discount" value="${summer.discount:0}" /> 
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean> 
 
<bean id="shoppingCart" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />
-->

<!-- Use Data from any External Resource File for use in a POJO  

<bean id="bannerLoader"
class="com.bridgelabz.use_externaldata_usingresource.BannerLoader"
init-method="showBanner">
<property name="banner">
<value>classpath:banner.txt</value>
</property>
</bean>

<bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<property name="name" value="tv" />
<property name="price" value="7.5" />
 <property name="discount" value="${specialcustomer.discount:0}" />  
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="CD-RW" />
<property name="price" value="1.5" />
 <property name="discount" value="${summer.discount:0}" />  
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean> 
 
<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

-->
<!--Create POJO by invoking a static Factory Method  

<bean id="tv" class="com.bridgelabz.spring_constructor.ProductCreator"
factory-method="createProduct">
<constructor-arg value="tv" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.ProductCreator"
factory-method="createProduct">
<constructor-arg value="cdrw" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.ProductCreator"
factory-method="createProduct">
<constructor-arg value="dvdrw" />
</bean>

<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />
-->

<!-- Create POJO using Spring's Factory Bean 

<bean id="tv"
class="com.bridgelabz.spring_constructor.DiscountFactoryBean">
<property name="product">
<bean class="com.bridgelabz.spring_constructor.Battery">
<constructor-arg value="AAA" />
<constructor-arg value="2.5" />
<constructor-arg value="0.2"/>
</bean>
</property>
<property name="discount" value="0.2" />
</bean>

<bean id="cdrw"
class="com.bridgelabz.spring_constructor.DiscountFactoryBean">
<property name="product">
<bean class="com.bridgelabz.spring_constructor.Disc">
<constructor-arg value="CD-RW" />
<constructor-arg value="1.5" />
<constructor-arg value="0.1"/>
</bean>
</property>
<property name="discount" value="0.1" />
</bean>


<bean id="dvdrw"
class="com.bridgelabz.spring_constructor.DiscountFactoryBean">
<property name="product">
<bean class="com.bridgelabz.spring_constructor.Disc">
<constructor-arg value="DVD-RW" />
<constructor-arg value="1.5" />
<constructor-arg value="0.1"/>
</bean>
</property>
<property name="discount" value="0.1" />
</bean>

<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />
--> 

<!-- Declare POJOs from Static Fields or Object Properties (First Way...) 
<bean id="tv" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
<property name="staticField">
<value>com.bridgelabz.spring_constructor.Product.TV</value>
</property>
</bean>
 
<bean id="cdrw" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
<property name="staticField">
<value>com.bridgelabz.spring_constructor.Product.CDRW</value>
</property>
</bean>

<bean id="dvdrw" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
<property name="staticField">
<value>com.bridgelabz.spring_constructor.Product.DVDRW</value>
</property>
</bean>

<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

-->

<!-- Declare POJOs from Static Fields or Object Properties (Second Way...!)  
 <util:constant id="tv"
static-field="com.bridgelabz.spring_constructor.Product.TV" />
 
<util:constant id="cdrw"
static-field="com.bridgelabz.spring_constructor.Product.CDRW" />

<util:constant id="dvdrw"
static-field="com.bridgelabz.spring_constructor.Product.DVDRW" />

<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

-->
<!-- Declare POJOs from Object Properties (First Way) 

<bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<property name="name" value="tv" />
<property name="price" value="7.5" />
 <property name="discount" value="0.1" />  
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="CD-RW" />
<property name="price" value="1.5" />
 <property name="discount" value="0.2" />  
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean> 
 
<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

<bean id="productRanking" class="com.bridgelabz.spring_constructor.ProductRanking">
<property name="bestSeller"> 
 <bean class="com.bridgelabz.spring_constructor.Disc">
  <property name="name" value="CD-RW" />
  <property name="price" value="1.5" />
  <property name="discount" value="0.1" />
 </bean>
</property>
</bean>
 
<bean id="bestSeller" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
 <property name="targetObject" ref="productRanking" />
 <property name="propertyPath" value="bestSeller" />
</bean>
-->

<!-- Declare POJOs from Object Properties (Second Way) --> 
<bean id="tv" class="com.bridgelabz.spring_constructor.Battery">
<property name="name" value="tv" />
<property name="price" value="7.5" />
 <property name="discount" value="0.1" />  
<property name="rechargeable" value="true" />
</bean>
 
<bean id="cdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="CD-RW" />
<property name="price" value="1.5" />
 <property name="discount" value="0.2" />  
<property name="capacity" value="700" />
</bean>

<bean id="dvdrw" class="com.bridgelabz.spring_constructor.Disc">
<property name="name" value="DVD-RW" />
<property name="price" value="3.0" />
<property name="capacity" value="700" />
</bean> 
 
<bean id="shoppingCart" lazy-init="true" class="com.bridgelabz.spring_constructor.ShoppingCart" scope="prototype" />

<bean id="productRanking" class="com.bridgelabz.spring_constructor.ProductRanking">
<property name="bestSeller"> 
 <bean class="com.bridgelabz.spring_constructor.Disc">
  <property name="name" value="CD-RW" />
  <property name="price" value="1.5" />
  <property name="discount" value="0.1" />
 </bean>
</property>
</bean>


<util:property-path id="bestSeller" path="productRanking.bestSeller" />
</beans>

